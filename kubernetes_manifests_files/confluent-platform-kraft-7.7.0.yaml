apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  dataVolumeCapacity: 10G
  storageClass:
    name: gp2
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-server:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  replicas: 1
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-server:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  dataVolumeCapacity: 10Gi
  storageClass:
    name: gp2
  dependencies:
    kRaftController:
      clusterRef:
        name: kraftcontroller
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-server-connect:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true  
---
apiVersion: platform.confluent.io/v1beta1
# Confluent Replicator is built as a connector, and so will use the `Connect` CRD.
kind: Connect
metadata:
  name: replicator
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-enterprise-replicator:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true  
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-ksqldb-server:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  dataVolumeCapacity: 10Gi
  storageClass:
    name: gp2
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-enterprise-control-center:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  dataVolumeCapacity: 10Gi
  storageClass:
    name: gp2
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: confluent.svc.cluster.local
      prefix: controlcenter
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
    - name: ksql-dev
      url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
    - name: connect-dev
      url:  http://connect.confluent.svc.cluster.local:8083
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-schema-registry:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
  image:
    application: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/cp-kafka-rest:7.7.4
    init: 141884504154.dkr.ecr.ap-southeast-1.amazonaws.com/confluentinc/confluent-init-container:2.9.6
  replicas: 1
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
